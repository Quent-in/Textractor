{"name":"Textractor","tagline":"OCR application for Sailfish OS. Based on Google's Tesseract OCR engine and Leptonica image processing library.","body":"### Welcome to Textractor documentation\r\nTextractor is an OCR ([optical character recognition](http://en.wikipedia.org/wiki/Optical_character_recognition)) application. It extracts text from images so that you can edit or save the text on a digital device.\r\n\r\nTextractor is based on two third party libraries. The actual recognition is made with Google's [Tesseract OCR](https://code.google.com/p/tesseract-ocr/) engine. Some general image manipulation is done with [Leptonica](http://www.leptonica.com/) image processing library before the image is passed to the Tesseract for recognition.\r\n\r\n### General Information\r\nUpon first use, Textractor will prompt you to choose a language file. The selected file is then downloaded and installed on your device. After that you can start using Textractor. If you need more languages, just select and download them. Once a language file is downloaded, it does not need to be downloaded again.\r\n\r\n**Question**: _Why I need to download the files separately?_\r\n\r\n**Answer**: It is recommended by Jolla and by common sense that developers don't ship massive amounts of data files with the application. In this case the application size would have been over 200 MB if all the language files were embedded to the .rpm package.\r\n\r\n### Supported image formats\r\nTextractor supports all the image formats which Sailfish OS supports. Images must have 32 bits per pixel. If image does not have 32 bits per pixels, preprocessing step is skipped and results may be poor. However, already preprocessed (Textractor outputs 1 bpp aka binarized image after the preprocessing step and saves it to the gallery) images will work fine. Preprocessed image is overwritten when new recognition is started.\r\n\r\n### Settings\r\nTextractor has some adjustable parameters which can improve the recognition results if adjusted correctly. The values are set as a default so that Textractor should work pretty good for most of the images. Most of the settings are rather advanced and I recommend to read instructions below if you want to adjust them. \r\n\r\n** to be done **\r\n\r\n### Hints for better results\r\n\r\n#### Taking a Good Picture\r\n\r\nTo get the best results you should follow a couple of simple guidelines when taking pictures:\r\n\r\n- Check that the lightning conditions are good. There should be no visible shadows or reflections in the image.\r\n- Check that the color of the background is light and there are no complex textures in it. The background can be also dark: just make sure the text is white or some other light color.\r\n\r\n#### Reasons for slow processing\r\n\r\nProcessing will be very slow and the results are obscure if the quality of the picture is bad. Some examples of bad quality pictures:\r\n\r\n- Underexposure or overexposure\r\n- Distorted (i.e. text is not straight or it's distorted) or blurred (camera moved during the shot) image\r\n- There's complex image or texture behind the actual text to be regocnized\r\n- Hand or some other object casted a shadow to the picture\r\n- There are reflections in the picture\r\n\r\n### Authors and Contributors\r\nThis application has been developed by @skvark. The icon and Jolla store header image have been created by @fercen.\r\n\r\n### Bug Reports and Feature Requests\r\nBugs and feature requests can be submitted to the [issues of the repository](https://github.com/skvark/Textractor/issues).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}